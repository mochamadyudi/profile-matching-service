{"version":3,"sources":["components/layout-components/PageHeaderAlt.js","components/layout-components/CustomrPageHeaderAlt.js","components/layout-components/container.js","components/permission-components/button.permission.js","constants/component.constants.js","../node_modules/@ant-design/icons-svg/es/asn/SaveOutlined.js","../node_modules/@ant-design/icons/es/icons/SaveOutlined.js","views/dashboard-views/screens/general-views/screens/audio/components/forms/audio.category.select.js","views/dashboard-views/screens/general-views/screens/audio/components/forms/grouping/announcement.mapping.form.jsx","views/dashboard-views/screens/general-views/screens/audio/components/forms/grouping/language.mapping.form.jsx","views/dashboard-views/screens/general-views/screens/audio/screens/groupings/create/index.js"],"names":["PageHeaderAlt","children","background","className","overlap","navType","useState","widthOffset","setWidthOffset","ref","useRef","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","style","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle","connect","theme","HeroComponents","props","thumbnail","containerType","name","positionName","loading","size","extra","lookup","description","colored","Content","Flex","mobileFlex","justifyContent","alignItems","join","src","preview","isPreview","width","height","objectFit","fallback","Utils","defaultImage","getNameInitial","Title","level","lineHeight","Text","color","positionColor","Array","isArray","length","map","item","index","borderRadius","margin","opacity","type","ContainerTailwind","ShowContainer","defaultProps","Container","ButtonMaster","visible","config","ButtonByType","disabled","onClick","notification","open","message","property","duration","ButtonPermission","permission","role","filter","child","PERMISSION_ONE_OF","block","danger","ghost","href","icon","shape","target","React","memo","SaveOutlined","AntdIcon","_extends","SaveOutlinedSvg","state","label","rules","selectValue","selectLabel","data","setData","setLoading","page","limit","params","pagination","setPagination","ApiService","url","get","then","response","paginate","catch","err","Item","Option","value","findKey","category","_Announcement","collections","__getAnCategorySelectionsList","form","order","bordered","title","select","Loading","onDragEnd","result","va","a","destination","fieldsValue","getFieldsValue","items","from","splice","source","reorderedItem","i","setFieldsValue","audios","droppableId","provided","droppableProps","innerRef","List","initialValue","fields","test","add","remove","field","draggableId","draggableProps","dragHandleProps","display","position","EllipsisOutlined","left","fontSize","transform","fieldKey","required","hidden","showSearch","replace","PlusOutlined","DeleteOutlined","language","language_id","id","Form","useForm","validateFields","newObj","Object","entries","key","val","Reflect","set","slug","body","post","info","error","marginTop","layout","gutter","xs","lg"],"mappings":"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","file":"static/js/37.de3e6339.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\n\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\n\tconst [widthOffset, setWidthOffset] = useState(0)\n\tconst ref = useRef(null);\n\n  useEffect(() => {\n\t\tif (navType === NAV_TYPE_TOP) {\n\t\t\tconst windowSize = window.innerWidth\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\n\t\t}\n\t}, [navType]);\n\t\n\tconst getStyle = () => {\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \n\t\tif (navType === NAV_TYPE_TOP) {\n\t\t\tstyle.marginRight = -widthOffset\n\t\t\tstyle.marginLeft = -widthOffset\n\t\t\tstyle.paddingLeft = 0\n\t\t\tstyle.paddingRight = 0\n\t\t}\n\t\treturn style\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \n\t\t\tstyle={getStyle()}\n\t\t>\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\n\t\t</div>\n\t)\n}\n\nPageHeaderAlt.propTypes = {\n  children: PropTypes.node,\n\tbackground: PropTypes.string,\n\tclassName: PropTypes.string,\n\toverlap: PropTypes.bool\n};\n\nconst mapStateToProps = ({ theme }) => {\n  const { navType } =  theme;\n  return { navType }\n};\n\nexport default connect(mapStateToProps, {})(PageHeaderAlt);","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport Flex from \"components/shared-components/Flex\";\nimport {Avatar, Image, Tag, Typography} from \"antd\";\n\nimport {PageHeaderAlt} from \"components/layout-components/PageHeaderAlt\";\nimport Utils from \"../../utils\";\nimport ContainerTailwind from \"./ContainerTailwind\";\nimport Container from \"./container\";\n\n/**\n *\n * @param {Object} props\n * @param {(String|null)} props.thumbnail\n * @param {(Number|80)} props.size\n * @param {(String|String[])} props.positionName\n * @param {(\"tailwind\"|\"antd\"|\"primary\")} props.containerType\n * @returns {JSX.Element}\n */\nfunction HeroComponents(props) {\n    let {thumbnail,containerType, name, positionName, loading,size, extra,lookup,description} = props\n    const [colored,setColored] = useState(()=>{\n        return \"cyan\" //Utils.randomColorStr();\n    })\n    function Content(){\n        return <Flex className=\"py-2\" mobileFlex={false} justifyContent=\"between\" alignItems=\"center\">\n            <Flex className={!lookup?.thumbnail ? \"py-4\" : \"py-2\"} mobileFlex={false} justifyContent=\"start\" alignItems=\"center\">\n                {\n                    lookup?.thumbnail && (\n                        <div className={['mk-w-[80px] mk-h-[80px] mk-rounded-full mk-overflow-hidden mk-flex mk-items-center mk-justify-center', thumbnail ? \"\":\"mk-bg-cyan-500\"].join(' ')}>\n                            <Avatar\n                                loading={loading}\n                                style={{background:\"transparent\"}}\n                                size={size ?? 50} src={!thumbnail ? null :\n                                <Image\n                                    preview={props?.isPreview ?? false}\n                                    width={size ?? 50}\n                                    height={size ?? 50}\n                                    style={{\n                                        objectFit: \"cover\"\n                                    }}\n                                    fallback={Utils.defaultImage}\n                                    src={thumbnail}\n                                />\n                            }>\n                                {\n                                    !thumbnail ? Utils.getNameInitial(name ?? \"-\") : null\n                                }\n\n                            </Avatar>\n                        </div>\n\n                    )\n                }\n                <div className={lookup?.thumbnail ? 'mx-4': ''}>\n                    <Typography.Title level={3} style={{lineHeight: 1,}}\n                                      className={'m-0 mb-2'}>{name}</Typography.Title>\n\n                    {\n                        typeof(description) !== 'boolean' && description !== '' && description !== null && (\n                            <div className={'mb-2'}>\n                                <Typography.Text>{description}</Typography.Text>\n                            </div>\n                        )\n                    }\n                    {\n                        lookup?.positionName && (\n                            positionName && typeof(positionName) === 'string' ?\n                                <Tag color={props?.positionColor ?? colored}>{positionName ?? '-'}</Tag>\n                            : Array.isArray(positionName) && positionName.length > 0 ?\n                                <Flex alignItems={'center'}>\n                                    {\n                                        positionName.map((item,index)=> {\n                                            return typeof(item) === 'string' ? (\n                                                <>\n                                                    <Tag color={props?.positionColor ?? colored}>{item ?? '-'}</Tag>\n                                                    {index < (positionName.length - 1) && (\n                                                        <div style={{width:\"7px\",height:'7px',borderRadius:\"4px\",margin:'0 10px 0 -2px',background:\"#939393\",opacity:.5}}/>\n                                                    )}\n                                                </>\n                                            ):\"\"\n                                        })\n                                    }\n                                </Flex>\n                            :null\n                        )\n                    }\n\n                </div>\n            </Flex>\n            { extra && extra}\n        </Flex>\n    }\n    function ShowContainer(type){\n        switch (type){\n            case \"antd\":\n            case \"primary\":\n                return (\n                    <Container>\n                        <Content/>\n                    </Container>\n                )\n            case \"tailwind\":\n            default:\n                return (\n                    <ContainerTailwind>\n                        <Content/>\n                    </ContainerTailwind>\n                )\n        }\n    }\n    return (\n        <PageHeaderAlt className=\"border-bottom\" overlap>\n            {ShowContainer(containerType)}\n        </PageHeaderAlt>\n    )\n}\n\nHeroComponents.propTypes = {\n    // thumbnail: PropTypes.string,\n    lookup: PropTypes.shape({\n        thumbnail: PropTypes.bool.isRequired,\n        positionName: PropTypes.bool.isRequired,\n    }),\n    containerType: PropTypes.oneOf(['tailwind','primary','antd']),\n    description: PropTypes.oneOfType([PropTypes.bool,PropTypes.string]),\n    name: PropTypes.string.isRequired,\n    // positionName: PropTypes.string.isRequired,\n    loading: PropTypes.bool.isRequired,\n    extra: PropTypes.node.isRequired\n}\nHeroComponents.defaultProps = {\n    // thumbnail: null,\n    containerType:\"tailwind\",\n    lookup: {\n        thumbnail: true,\n        positionName: true\n    },\n    description: false,\n    name: null,\n    positionName: null,\n    loading: null,\n    extra:null\n}\n\nexport default HeroComponents","import React from 'react'\n\n\n/**\n *\n * @param {(Object|undefined)} props\n * @param {(string|undefined)} props.className\n * @param {(Element|ChildNode)} props.children\n * @returns {JSX.Element}\n * @constructor\n */\nfunction Container(props){\n    return (\n        <div className={`${['mk-mx-auto mk-max-w-screen-xl',props?.className].join(\" \")}`}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Container","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {PERMISSION_ONE_OF} from \"../../constants/component.constants\";\nimport {Button, notification} from \"antd\";\n\nfunction ButtonMaster(props){\n    let { visible,config } = props\n    if(!visible) return null\n    return (\n        <Button {...config} className={'btn-master'}>\n            {props?.children ?? null}\n        </Button>\n    )\n}\n\nfunction ButtonByType(props){\n    let { theme,config  } = props\n    switch (theme?.type){\n        case \"visible\":\n            return (\n                <ButtonMaster\n                    visible={true}\n                    config={{...config}}\n                >\n                    {props?.children ?? null}\n                </ButtonMaster>\n            )\n        case \"disabled\":\n            return (\n                <ButtonMaster\n                    visible={true}\n                    config={{\n                        ...config,\n                        disabled:true\n                    }}\n                >\n                    {props?.children ?? null}\n                </ButtonMaster>\n            )\n        case \"notification\":\n            return (\n                <ButtonMaster\n                    visible={true}\n                    config={{\n                        ...config,\n                        onClick: function(){\n                            notification.open({\n                                message: props?.theme?.property?.message ?? \"Access Denied\",\n                                description: props?.theme?.property?.description ?? \"Anda Tidak dapat Melakukan aksi\",\n                                duration: props?.theme?.property?.duration ?? 0,\n                            })\n                        }\n                    }}\n                >\n                    {props?.children ?? null}\n                </ButtonMaster>\n            )\n        case \"hidden\":\n        default:\n            return null\n    }\n}\n\n/**\n *\n * @param {Object} props\n * @param {Object} props.theme\n * @param {(\"element\"| \"visible\" | \"disabled\" | \"notification\" | \"hidden\")} props.theme.type\n * @param {Object} props.theme.property\n * @param {(String|\"Access Denied\"|undefined|null)} props.theme.property.message\n * @param {(String|\"Anda Tidak Dapat Melakukan Aksi\"|undefined|null)} props.theme.property.description\n * @returns {JSX.Element}\n * @constructor\n */\nfunction ButtonPermission(props){\n    let { permission,role,config,theme} = props\n    if(!permission){\n        return <ButtonByType {...props} theme={theme}/>\n    }\n    if(typeof(permission) === 'string' && permission === role){\n        return (\n            <ButtonMaster\n                visible={true}\n                config={config}\n            >\n                {props?.children ?? null}\n            </ButtonMaster>\n        )\n    }\n    if(Array.isArray(permission) && permission.filter((child)=> child === role).length > 0){\n        return (\n            <ButtonMaster\n                visible={true}\n                config={config}\n            >\n                {props?.children ?? null}\n            </ButtonMaster>\n        )\n    }\n    return <ButtonByType {...props} theme={theme}/>\n\n}\n\nButtonPermission.propTypes = {\n    theme: PropTypes.shape({\n        type: PropTypes.oneOf(['hidden','disabled','visible','notification','message']),\n        property: PropTypes.any,\n    }),\n    permission: PropTypes.oneOfType([\n        PropTypes.any,\n        PropTypes.string.isRequired,\n        PropTypes.array.isRequired\n    ]),\n    config: PropTypes.shape({\n        type: PropTypes.oneOf(['primary','ghost','link','dashed','text','default']),\n        onClick: PropTypes.func,\n        target: PropTypes.string,\n        size: PropTypes.oneOf(['large','middle','small']),\n        shape: PropTypes.oneOf(['default','circle','round']),\n        loading: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.shape({\n                delay: PropTypes.number\n            })\n        ]),\n        htmlType: PropTypes.oneOf(['button','submit']),\n        href: PropTypes.oneOfType([\n            PropTypes.any,\n            PropTypes.string\n        ]),\n        ghost: PropTypes.oneOf([false, true]),\n        disabled: PropTypes.oneOf([false, true]),\n        block: PropTypes.oneOf([true, false]),\n        danger: PropTypes.oneOf([false, true]),\n        icon: PropTypes.node,\n    })\n}\nButtonPermission.defaultProps = {\n    role: 'admin',\n    theme: {\n        type:\"element\",\n        property: {}\n    },\n    permission: PERMISSION_ONE_OF,\n    config:{\n        block: false,\n        danger: false,\n        disabled: false,\n        ghost: false,\n        href: null,\n        icon: null,\n        loading: false,\n        shape:'default',\n        size:'large',\n        target:null,\n        type:'default',\n        onClick: function(){}\n    }\n}\n\nexport default connect(()=> {\n    return {}\n},{})(React.memo(ButtonPermission))","export const PERMISSION_ONE_OF = ['admin','operator','public','guest']","// This icon file is generated automatically.\nvar SaveOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z\" } }] }, \"name\": \"save\", \"theme\": \"outlined\" };\nexport default SaveOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SaveOutlinedSvg from \"@ant-design/icons-svg/es/asn/SaveOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SaveOutlined = function SaveOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SaveOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SaveOutlined.displayName = 'SaveOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SaveOutlined);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Select } from 'antd';\nimport ApiService from \"../../../../../../../../services/api.service\";\nimport {findKey} from \"../../../../../../../../utils\";\nfunction mapStateToProps(state) {\n return {\n\n };\n}\n\n/**\n * @typedef RulesForm\n * @property {boolean} required\n * @property {string | \"Can't be empty\"} message\n */\n\n/**\n *\n * @param {object} props\n * @param {string | Array | [] | string[] } props.name\n * @param {string | 'Audio Category' } props.label\n * @param {RulesForm[]} props.rules\n * @param {string[] | string} props.selectValue\n * @param {string[] | string} props.selectLabel\n * @returns {JSX.Element}\n */\nfunction AudioCategorySelect(props)  {\n    let { name, label, rules,selectValue, selectLabel } = props\n    const [ data, setData ] = useState([])\n    const [ loading, setLoading ] = useState(false)\n    const [ params ] = useState({\n        page:1,\n        limit:100\n    })\n    const [pagination, setPagination ] = useState({\n        page:1,\n        limit:50\n    })\n\n\n    useEffect(()=> {\n        setLoading(true)\n        new ApiService({\n            url:`/api/v1/audio/category`,\n            config: {\n                params: {\n                    ...params,\n                }\n            }\n        }).get()\n            .then((response)=> {\n                setData([...response?.data])\n                setPagination({\n                    ...pagination,\n                    ...response?.pagination,\n                    ...response?.paginate\n                })\n                setLoading(false)\n            })\n            .catch((err)=> {\n                setLoading(false)\n                setData([])\n\n            })\n    },[params])\n  return (\n   <Form.Item name={name ?? 'category_id'} label={label ?? 'Audio Category'} rules={rules ?? []}>\n       <Select loading={loading}>\n           {\n               Array.isArray(data) && data.length > 0 ?\n               data.map((item,index)=> (\n                   <Select.Option key={index} value={findKey(item,selectValue)}>{findKey(item,selectLabel)}</Select.Option>\n               )): null\n           }\n       </Select>\n   </Form.Item>\n  );\n}\n\nexport default connect(\n mapStateToProps,\n)(AudioCategorySelect);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {Button, Card, Form, Input, Select} from \"antd\";\nimport ApiService from \"../../../../../../../../../services/api.service\";\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\nimport Flex from \"../../../../../../../../../components/shared-components/Flex\";\nimport {AppstoreOutlined, DeleteOutlined, EllipsisOutlined, PlusOutlined} from \"@ant-design/icons\";\nimport {findKey} from \"../../../../../../../../../utils\";\nimport {__getAnCategorySelectionsList} from \"../../../../../../../../../redux/actions/Announcement\";\nimport Loading from \"../../../../../../../../../components/shared-components/Loading\";\n\nfunction mapStateToProps({_Announcement}) {\n    let { collections } = _Announcement\n    let { category } = collections\n return { category };\n}\n\nfunction AnnouncementMappingForm({form,__getAnCategorySelectionsList,category,...props})  {\n    const [ loading, setLoading ] = useState(false)\n    const [ data, setData ] = useState([\n        \"chime-open\",\n        \"attention\",\n        \"airlines\",\n        \"queue\",\n        \"airline\",\n        \"airline_code\",\n        \"destination\",\n        \"city\",\n        \"boarding\",\n        \"boarding_gate\",\n        \"thankyou\"\n    ])\n\n    const [initialValue, setInitialValue] = useState(()=> {\n        return data.map((item,index)=> ({\n            order:index,\n            value:item\n        }))\n    })\n\n    useEffect(()=> {\n        __getAnCategorySelectionsList({\n            page:1,\n            limit:100\n        })\n    },[__getAnCategorySelectionsList])\n\n    function onDragEnd(result,va,a){\n\n        if (!result.destination) return;\n        let fieldsValue = form.getFieldsValue()\n\n        let items = Array.from(findKey(fieldsValue,['audios']));\n        let [reorderedItem] = items.splice(result.source.index, 1);\n        reorderedItem.order = result.destination.index\n\n\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        for(let i = 0; i < items.length;i++){\n            items[i].order = typeof(items[i]?.order) === 'undefined' ? 0 : i\n            items[i] = {\n                ...items[i],\n            }\n        }\n        form.setFieldsValue({\n            audios:items ?? []\n        })\n    }\n  return (\n      <Card bordered={false} title={'Announcement Mapping'}>\n          {\n              category?.select?.loading ? <Loading/> :\n\n                  <DragDropContext onDragEnd={onDragEnd}>\n                      <Droppable\n                          droppableId=\"audios\"\n                      >\n                          {(provided)=> {\n                              return (\n                                  <div\n                                      {...provided.droppableProps}\n                                      className={'droppable'}\n                                      ref={provided.innerRef}\n                                  >\n                                      <Form.List\n                                          initialValue={category?.select?.data ?? []}\n                                          name={'audios'}>\n                                          {(fields, { add, remove },test) => {\n                                              return (\n                                                  <div className=\"mb-3\">\n                                                      {fields.map((field, index) => (\n                                                          <Draggable fields={fields} key={['language',field.name].join('-')} draggableId={['language',field.name].join('-')} index={index}>\n                                                              {(provided) => (\n                                                                  <div className={'bg-white p-2 rounded'} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                                                      <Flex alignItems={'center'} justifyContent={'between'} mobileFlex className={'mk-gap-4'}>\n                                                                          <div style={{\n                                                                              display:\"flex\",\n                                                                              alignItems:\"center\",\n                                                                              lineHeight:0,\n                                                                              width:30,\n                                                                              height:30,\n                                                                              position:\"relative\"\n                                                                          }}>\n                                                                              <EllipsisOutlined style={{position:\"absolute\",left:-7.5,fontSize:25,transform:\"rotate(90deg)\"}}/>\n                                                                              <EllipsisOutlined style={{position:\"absolute\",fontSize:25,transform:\"rotate(90deg)\"}}/>\n                                                                          </div>\n                                                                          <Form.Item\n                                                                              {...field}\n                                                                              name={[field.name,'order']}\n                                                                              fieldKey={[field.fieldKey,'order']}\n                                                                              rules={[{ required: true, message: \"Can't be empty!\" }]}\n                                                                              hidden\n                                                                              initialValue={index}\n                                                                          >\n                                                                              <Input value={index}/>\n                                                                          </Form.Item>\n                                                                          <Form.Item\n                                                                              {...field}\n                                                                              name={[field.name,'name']}\n                                                                              fieldKey={[field.fieldKey,'name']}\n                                                                              rules={[{ required: true, message: \"Can't be empty!\" }]}\n                                                                              className=\"w-100 m-0\"\n                                                                          >\n\n                                                                              <Select loading={loading} showSearch>\n                                                                                  {\n                                                                                      category.select?.data.map((item,index)=>{\n                                                                                          return (\n                                                                                              <Select.Option value={item?.name} key={item?.name}>{`${item?.name}`.replace(/-/g,' ')}</Select.Option>\n                                                                                          )\n                                                                                      })\n                                                                                  }\n                                                                              </Select>\n                                                                          </Form.Item>\n                                                                          <Flex alignItems={'center'} justifyContent={'between'} mobileFlex className={'mk-gap-2'}>\n                                                                              {\n                                                                                  (fields.length - 1) === index && fields.length < category.select.data.length &&  (\n                                                                                      <Button type={'primary'} shape={'circle'} size={'small'}\n                                                                                              onClick={() => { add()}}\n                                                                                              icon={<PlusOutlined/>}/>\n                                                                                  )\n                                                                              }\n                                                                              <Button type={'primary'} danger shape={'circle'} size={'small'}\n                                                                                      onClick={() => { remove(field.name)}}\n                                                                                      icon={<DeleteOutlined />}/>\n                                                                          </Flex>\n\n                                                                      </Flex>\n\n                                                                  </div>\n                                                              )}\n                                                          </Draggable>\n                                                      ))}\n                                                      {\n                                                          fields.length === 0 && (\n                                                              <Button type={'dashed'}\n                                                                      className={'w-100'}\n                                                                      onClick={() => { add()}}\n                                                                      icon={<PlusOutlined/>}>\n                                                                  Add Announcement\n                                                              </Button>\n                                                          )\n                                                      }\n                                                  </div>\n                                              )\n                                          }}\n                                      </Form.List>\n                                  </div>\n                              )\n                          }}\n                      </Droppable>\n                  </DragDropContext>\n          }\n\n      </Card>\n  );\n}\n\nexport default connect(\n mapStateToProps,{__getAnCategorySelectionsList}\n)(AnnouncementMappingForm);","import React, {useState,useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport {Avatar, Form, Button,Input, Card, Select} from \"antd\";\nimport { DragDropContext, Droppable,Draggable } from 'react-beautiful-dnd';\nimport {Scrollbars} from \"react-custom-scrollbars\";\nimport {AppstoreOutlined, DeleteOutlined, EllipsisOutlined, PlusOutlined} from \"@ant-design/icons\";\nimport Flex from \"../../../../../../../../../components/shared-components/Flex\";\nimport {findKey} from \"../../../../../../../../../utils\";\nimport ApiService from \"../../../../../../../../../services/api.service\";\n\nfunction mapStateToProps(state) {\n return {\n\n };\n}\n\n/**\n *\n * @param {object} props\n * @param {object} props.form\n * @returns {JSX.Element}\n */\nfunction LanguageMappingForm(props)  {\n    let { form } = props\n    const [ loading, setLoading ] = useState(false)\n    const [ params, setParams ] = useState({\n        page:1,\n        limit:10,\n    })\n    const [ data, setData ] = useState([])\n\n    useEffect(()=> {\n        setLoading(true)\n        new ApiService({\n            url:`/api/v1/audio/language`,\n            config : {\n                params: {\n                    ...params,\n                }\n            }\n        }).get()\n            .then((response)=> {\n                setData([...response?.data])\n                setLoading(false)\n            })\n            .catch((err)=> {\n                setData([])\n                setLoading(false)\n            })\n    },[params])\n\n\n    function onDragEnd(result){\n\n        if (!result.destination) return;\n        let fieldsValue = form.getFieldsValue()\n\n        let items = Array.from(findKey(fieldsValue,['language']));\n        let [reorderedItem] = items.splice(result.source.index, 1);\n        reorderedItem.order = result.destination.index\n\n\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        for(let i = 0; i < items.length;i++){\n            items[i].order = typeof(items[i]?.order) === 'undefined' ? 0 : i\n            items[i] = {\n                ...items[i],\n            }\n        }\n        form.setFieldsValue({\n            language:items ?? []\n        })\n    }\n  return (\n      <Card bordered={false} title={'Language Mapping'}>\n          <DragDropContext onDragEnd={result => onDragEnd(result)}>\n              <Droppable\n                  droppableId=\"language\"\n              >\n                  {(provided)=> {\n                    return (\n                        <div className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n                            <Form.List name={'language'} initialValue={[{order:0,language_id:null}]}>\n                                {(fields, { add, remove }) => {\n                                    return (\n                                        <div className=\"mb-3\">\n                                            {fields.map((field, index) => (\n                                                <Draggable fields={fields} key={['language',field.name].join('-')} draggableId={['language',field.name].join('-')} index={index}>\n                                                    {(provided) => (\n                                                        <div className={'bg-white p-2 rounded'} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                                            <Flex alignItems={'center'} justifyContent={'between'} mobileFlex className={'mk-gap-4'}>\n                                                                <div style={{\n                                                                    display:\"flex\",\n                                                                    alignItems:\"center\",\n                                                                    lineHeight:0,\n                                                                    width:30,\n                                                                    height:30,\n                                                                    position:\"relative\"\n                                                                }}>\n                                                                    <EllipsisOutlined style={{position:\"absolute\",left:-7.5,fontSize:25,transform:\"rotate(90deg)\"}}/>\n                                                                    <EllipsisOutlined style={{position:\"absolute\",fontSize:25,transform:\"rotate(90deg)\"}}/>\n                                                                </div>\n\n                                                                <Form.Item\n                                                                    {...field}\n                                                                    hidden\n                                                                    name={[field.name,'order']}\n                                                                    fieldKey={[field.fieldKey,'order']}\n                                                                    rules={[{ required: true, message: 'Please enter variant order' }]}\n                                                                    className=\"w-100 m-0\"\n                                                                    initialValue={index}\n                                                                >\n                                                                    <Input/>\n                                                                </Form.Item>\n\n                                                            <Form.Item\n                                                                {...field}\n                                                                name={[field.name,'language_id']}\n                                                                fieldKey={[field.fieldKey,'language_id']}\n                                                                rules={[{ required: true, message: 'Please enter variant Language' }]}\n                                                                className=\"w-100 m-0\"\n                                                            >\n\n                                                                    <Select loading={loading}>\n                                                                        {\n                                                                            data.map((item,index)=>{\n                                                                                return (\n                                                                                    <Select.Option value={findKey(item,['identifier'])} key={item?.id ?? index}>{findKey(item,['data','display_name']) ?? \"-\"}</Select.Option>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </Select>\n                                                            </Form.Item>\n                                                                <Flex alignItems={'center'} justifyContent={'between'} mobileFlex className={'mk-gap-2'}>\n                                                                    {\n                                                                        (fields.length - 1) === index && fields.length < data.length &&  (\n                                                                            <Button type={'primary'} shape={'circle'} size={'small'}\n                                                                                    onClick={() => { add()}}\n                                                                                    icon={<PlusOutlined/>}/>\n                                                                        )\n                                                                    }\n                                                                    <Button type={'primary'} danger shape={'circle'} size={'small'}\n                                                                            onClick={() => { remove(field.name)}}\n                                                                            icon={<DeleteOutlined />}/>\n                                                                </Flex>\n\n                                                            </Flex>\n\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {\n                                                fields.length === 0 && (\n                                                    <Button type={'dashed'}\n                                                            className={'w-100'}\n                                                            onClick={() => { add()}}\n                                                            icon={<PlusOutlined/>}>\n                                                        Add Language\n                                                    </Button>\n                                                )\n                                            }\n                                        </div>\n                                    )\n                                }}\n                            </Form.List>\n                        </div>\n                    )\n                  }}\n              </Droppable>\n\n          </DragDropContext>\n      </Card>\n  );\n}\n\nexport default connect(\n mapStateToProps,\n)(LanguageMappingForm);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport HeroComponents from \"components/layout-components/CustomrPageHeaderAlt\";\nimport ContainerTailwind from \"components/layout-components/ContainerTailwind\";\nimport AnnouncementMappingForm from \"../../../components/forms/grouping/announcement.mapping.form\";\nimport {Card, Col, Form, Input,message, Row} from \"antd\";\nimport AudioCategorySelect from \"../../../components/forms/audio.category.select\";\nimport LanguageMappingForm from \"../../../components/forms/grouping/language.mapping.form\";\nimport ButtonPermission from \"../../../../../../../../../components/permission-components/button.permission\";\nimport {SaveOutlined} from \"@ant-design/icons\";\nimport ApiService from \"../../../../../../../../../services/api.service\";\n\nfunction mapStateToProps(state) {\n return {\n\n };\n}\n\nfunction Index()  {\n    const [ loading, setLoading ] = useState(false)\n    const [ form ] = Form.useForm();\n\n    const onFinish = ()=> {\n        setLoading(true)\n        form.validateFields()\n            .then((value)=> {\n              let newObj = {}\n              Object.entries(value).map(([key,val])=> {\n                if(key === 'language'){\n                  val = Array.isArray(val) && val.length > 0 ? val.map((item)=> (item?.language_id ?? \"\")) : []\n                  Reflect.set(newObj,key,val)\n                }else if (key === 'audios'){\n                  val = Array.isArray(val) && val.length > 0 ? val.map((item)=> (item?.slug ?? item?.name ?? \"\")) : []\n                  Reflect.set(newObj,key,val)\n                }else{\n                  Reflect.set(newObj,key,val)\n                }\n                Reflect.set(value,key,val)\n              })\n              \n              new ApiService({\n                url:`/api/v1/announcement/create`,\n                body: value\n              }).post()\n                .then((response)=> {\n                  message.info(response?.message ?? \"-\")\n                  setLoading(false)\n                })\n                .catch((err)=> {\n                  message.error(err?.message ?? \"Error: Failed\")\n                  setLoading(false)\n                })\n            })\n            .catch((err)=> {\n                setLoading(false)\n              message.error(err?.message ?? \"Error: Failed\")\n            })\n    }\n  return (\n      <>\n          <HeroComponents\n              loading={false}\n              name={\"Create\"}\n              positionName={['General','Announcement','Grouping']}\n              thumbnail={null}\n              positionColor={'cyan'}\n              extra={<>\n                  <ButtonPermission\n                      permission={['admin']}\n                      theme={{\n                          type: \"disabled\",\n                          property: {\n                              message: \"Access Denied\"\n                          }\n                      }}\n                      config={{\n                          type: \"primary\",\n                          size: \"small\",\n                          icon: <SaveOutlined />,\n                          ghost:true,\n                          loading:loading,\n                          onClick: onFinish,\n                      }}>\n                      Save\n                  </ButtonPermission>\n              </>}\n          />\n\n          <div style={{marginTop:90}}>\n              <ContainerTailwind>\n                  <Form\n                      form={form}\n                      initialValue={{\n                        language:[\n                          {\n                            order:0,\n                            language_id:null\n                          }\n                        ]\n                      }}\n                      layout={'vertical'}\n                  >\n                      <Row gutter={24}>\n                          <Col xs={24} lg={14}>\n                              <AnnouncementMappingForm form={form}/>\n                          </Col>\n                          <Col xs={24} lg={10}>\n                              <Card bordered={false} title={'General'}>\n                                  <Form.Item name={'identifier'} label={'Identifier'} rules={[{required:true,message:\"Can't be empty!\"}]}>\n                                      <Input/>\n                                  </Form.Item>\n                                  <Form.Item name={'title'} label={'Title'} rules={[{required:true,message:\"Can't be empty!\"}]}>\n                                      <Input/>\n                                  </Form.Item>\n                                  <AudioCategorySelect name={'category_id'} selectValue={['id']} selectLabel={['data','display_name']}/>\n                              </Card>\n                              <LanguageMappingForm form={form}/>\n                          </Col>\n                      </Row>\n                  </Form>\n              </ContainerTailwind>\n          </div>\n      </>\n  );\n}\n\nexport default connect(\n mapStateToProps\n)(Index);"],"sourceRoot":""}