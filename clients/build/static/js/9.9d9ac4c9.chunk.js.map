{"version":3,"sources":["views/dashboard-views/screens/settings-views/screens/edit-profile.setting.jsx"],"names":["AvatarComponent","props","useState","avatar","setAvatar","alignItems","mobileFlex","className","size","src","icon","onChange","info","key","file","status","getBase64","originFileObj","imageUrl","setState","avatarUrl","message","success","content","duration","loading","showUploadList","type","onClick","FormProfile","isAuthenticated","profile","ProfileUpdate","Form","useForm","form","useEffect","resetFields","name","layout","initialValues","onFinish","validateFields","then","value","ApiService","url","body","put","response","error","warning","catch","err","messsage","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","htmlType","connect","auth","positionName"],"mappings":"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","file":"static/js/9.9d9ac4c9.chunk.js","sourcesContent":["import React, { useState, useEffect,Component } from 'react';\n\nimport {Avatar, DatePicker, Divider, Empty, message} from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\nimport Flex from 'components/shared-components/Flex'\nimport { connect } from 'react-redux';\nimport SettingLayout from \"../setting.layout\";\nimport {Form, Input, Upload, Row, Col, Button} from 'antd'\nimport {ProfileUpdate} from \"../../../../../redux/actions/Auth\";\nimport ApiService from \"../../../../../services/api.service\";\n\n\nfunction AvatarComponent(props){\n  \n  const [ avatar,setAvatar] = useState(\"/img/avatars/thumb-6.jpg\")\n  const onUploadAvatar = info => {\n    const key = 'updatable';\n    if (info.file.status === 'uploading') {\n      message.loading({ content: 'Uploading...', key, duration: 1000 });\n      return;\n    }\n    if (info.file.status === 'done') {\n      this.getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          avatarUrl: imageUrl,\n        }),\n      );\n      message.success({ content: 'Uploaded!', key,  duration: 1.5 });\n    }\n  };\n  \n  const onRemoveAvatar = () => {\n    setAvatar(null)\n  }\n  \n  return (\n    <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\n      <Avatar size={90} src={avatar} icon={<UserOutlined />}/>\n      <div className=\"ml-3 mt-md-0 mt-3 d-flex\">\n        <Upload onChange={onUploadAvatar} showUploadList={false}>\n          <Button type=\"primary\">Change Avatar</Button>\n        </Upload>\n        <Button className=\"ml-2\" onClick={onRemoveAvatar}>Remove</Button>\n      </div>\n    </Flex>\n  )\n}\n\nfunction FormProfile(props){\n  let { isAuthenticated, profile,ProfileUpdate } = props\n  const [ loading, setLoading ] = useState(false)\n  const [ form ] = Form.useForm()\n  const onFinish = ()=> {\n    form.validateFields()\n      .then(async (value)=> {\n        await new ApiService({\n          url:`/api/v1/user`,\n          body:value\n        }).put()\n          .then((response)=> {\n            if(!response?.error){\n              message.success(response?.message ?? \"OK\")\n            }else{\n              message.warning(response?.message ?? \"Warning:\")\n            }\n          })\n      })\n      .catch((err)=> {\n        message.error(err?.messsage)\n      })\n  }\n  function onFinishFailed(){\n  \n  }\n  \n  useEffect(()=> {\n    form.resetFields()\n  },[profile])\n  return (\n    <Form\n      name=\"basicInformation\"\n      layout=\"vertical\"\n      form={form}\n      initialValues={profile ? {...profile} : {}}\n      onFinish={onFinish}\n    >\n      <Row>\n        <Col xs={24} sm={24} md={24} lg={16}>\n          <Row gutter={ROW_GUTTER}>\n            <Col xs={24} sm={24} md={12}>\n              <Form.Item\n                label=\"Full Name\"\n                name=\"fullName\"\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input your first name!',\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={24} md={12}>\n              <Form.Item\n                label=\"Email\"\n                name=\"email\"\n                rules={[{\n                  required: true,\n                  type: 'email',\n                  message: 'Please enter a valid email!'\n                }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Button type=\"primary\" htmlType=\"submit\" loading={profile?.loading ?? false}>\n            Save Change\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nfunction EditProfileSetting(props)  {\n  let { profile,isAuthenticated } = props\n  return (\n    <SettingLayout positionName={['Settings']} name={'Edit Profile'}>\n      <AvatarComponent/>\n      <Divider/>\n      \n      {\n        isAuthenticated && profile ? (\n          <FormProfile {...props}/>\n        ): <Empty/>\n      }\n    </SettingLayout>\n  );\n}\n\nexport default connect(\n function({auth}){\n   let { isAuthenticated, profile} = auth\n   return {isAuthenticated, profile}\n },{ProfileUpdate}\n)(EditProfileSetting);"],"sourceRoot":""}