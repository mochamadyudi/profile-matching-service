{"version":3,"sources":["components/permission-components/button.permission.js","constants/component.constants.js","../node_modules/@ant-design/icons-svg/es/asn/SaveOutlined.js","../node_modules/@ant-design/icons/es/icons/SaveOutlined.js","../node_modules/antd/es/time-picker/index.js","constants/socket.event.js","views/dashboard-views/screens/general-views/screens/gate/components/gate.form.js","views/dashboard-views/screens/general-views/screens/gate/create/index.js"],"names":["ButtonMaster","props","visible","config","className","children","ButtonByType","theme","type","disabled","onClick","notification","open","message","property","description","duration","ButtonPermission","permission","role","Array","isArray","filter","child","length","defaultProps","PERMISSION_ONE_OF","block","danger","ghost","href","icon","loading","shape","size","target","connect","React","memo","SaveOutlined","ref","AntdIcon","_extends","SaveOutlinedSvg","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalTimePicker","DatePicker","TimePicker","InternalRangePicker","RangePicker","dropdownClassName","popupClassName","picker","mode","undefined","_a","addon","renderExtraFooter","restProps","internalRenderExtraFooter","devWarning","displayName","ON_DISPLAY_SYS_PUSH","GateForm","initial","form","useState","useEffect","field","keys","forEach","key","k","Reflect","set","moment","setFieldsValue","identifier","data","Fragment","layout","initialValue","gutter","justify","xs","lg","Item","name","label","hasFeedback","rules","required","autoComplete","placeholder","style","width","format","hidden","select","onChange","value","args","console","log","airline","item","id","keyValue","keyDisplay","index","Option","findKey","city","displayValue","state","SocketSend","history","useHistory","Form","useForm","setLoading","positionName","thumbnail","positionColor","extra","replace","content","text","dots","speed","validateFields","then","entries","val","isValid","ApiService","url","body","post","response","success","error","catch","err","marginTop"],"mappings":"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","file":"static/js/44.adc49323.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {PERMISSION_ONE_OF} from \"../../constants/component.constants\";\nimport {Button, notification} from \"antd\";\n\nfunction ButtonMaster(props){\n    let { visible,config } = props\n    if(!visible) return null\n    return (\n        <Button {...config} className={'btn-master'}>\n            {props?.children ?? null}\n        </Button>\n    )\n}\n\nfunction ButtonByType(props){\n    let { theme,config  } = props\n    switch (theme?.type){\n        case \"visible\":\n            return (\n                <ButtonMaster\n                    visible={true}\n                    config={{...config}}\n                >\n                    {props?.children ?? null}\n                </ButtonMaster>\n            )\n        case \"disabled\":\n            return (\n                <ButtonMaster\n                    visible={true}\n                    config={{\n                        ...config,\n                        disabled:true\n                    }}\n                >\n                    {props?.children ?? null}\n                </ButtonMaster>\n            )\n        case \"notification\":\n            return (\n                <ButtonMaster\n                    visible={true}\n                    config={{\n                        ...config,\n                        onClick: function(){\n                            notification.open({\n                                message: props?.theme?.property?.message ?? \"Access Denied\",\n                                description: props?.theme?.property?.description ?? \"Anda Tidak dapat Melakukan aksi\",\n                                duration: props?.theme?.property?.duration ?? 0,\n                            })\n                        }\n                    }}\n                >\n                    {props?.children ?? null}\n                </ButtonMaster>\n            )\n        case \"hidden\":\n        default:\n            return null\n    }\n}\n\n/**\n *\n * @param {Object} props\n * @param {Object} props.theme\n * @param {(\"element\"| \"visible\" | \"disabled\" | \"notification\" | \"hidden\")} props.theme.type\n * @param {Object} props.theme.property\n * @param {(String|\"Access Denied\"|undefined|null)} props.theme.property.message\n * @param {(String|\"Anda Tidak Dapat Melakukan Aksi\"|undefined|null)} props.theme.property.description\n * @returns {JSX.Element}\n * @constructor\n */\nfunction ButtonPermission(props){\n    let { permission,role,config,theme} = props\n    if(!permission){\n        return <ButtonByType {...props} theme={theme}/>\n    }\n    if(typeof(permission) === 'string' && permission === role){\n        return (\n            <ButtonMaster\n                visible={true}\n                config={config}\n            >\n                {props?.children ?? null}\n            </ButtonMaster>\n        )\n    }\n    if(Array.isArray(permission) && permission.filter((child)=> child === role).length > 0){\n        return (\n            <ButtonMaster\n                visible={true}\n                config={config}\n            >\n                {props?.children ?? null}\n            </ButtonMaster>\n        )\n    }\n    return <ButtonByType {...props} theme={theme}/>\n\n}\n\nButtonPermission.propTypes = {\n    theme: PropTypes.shape({\n        type: PropTypes.oneOf(['hidden','disabled','visible','notification','message']),\n        property: PropTypes.any,\n    }),\n    permission: PropTypes.oneOfType([\n        PropTypes.any,\n        PropTypes.string.isRequired,\n        PropTypes.array.isRequired\n    ]),\n    config: PropTypes.shape({\n        type: PropTypes.oneOf(['primary','ghost','link','dashed','text','default']),\n        onClick: PropTypes.func,\n        target: PropTypes.string,\n        size: PropTypes.oneOf(['large','middle','small']),\n        shape: PropTypes.oneOf(['default','circle','round']),\n        loading: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.shape({\n                delay: PropTypes.number\n            })\n        ]),\n        htmlType: PropTypes.oneOf(['button','submit']),\n        href: PropTypes.oneOfType([\n            PropTypes.any,\n            PropTypes.string\n        ]),\n        ghost: PropTypes.oneOf([false, true]),\n        disabled: PropTypes.oneOf([false, true]),\n        block: PropTypes.oneOf([true, false]),\n        danger: PropTypes.oneOf([false, true]),\n        icon: PropTypes.node,\n    })\n}\nButtonPermission.defaultProps = {\n    role: 'admin',\n    theme: {\n        type:\"element\",\n        property: {}\n    },\n    permission: PERMISSION_ONE_OF,\n    config:{\n        block: false,\n        danger: false,\n        disabled: false,\n        ghost: false,\n        href: null,\n        icon: null,\n        loading: false,\n        shape:'default',\n        size:'large',\n        target:null,\n        type:'default',\n        onClick: function(){}\n    }\n}\n\nexport default connect(()=> {\n    return {}\n},{})(React.memo(ButtonPermission))","export const PERMISSION_ONE_OF = ['admin','operator','public','guest']","// This icon file is generated automatically.\nvar SaveOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M893.3 293.3L730.7 130.7c-7.5-7.5-16.7-13-26.7-16V112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 184h256v104H384V184zm456 656H184V184h136v136c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V205.8l136 136V840zM512 442c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144zm0 224c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80z\" } }] }, \"name\": \"save\", \"theme\": \"outlined\" };\nexport default SaveOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SaveOutlinedSvg from \"@ant-design/icons-svg/es/asn/SaveOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SaveOutlined = function SaveOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SaveOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SaveOutlined.displayName = 'SaveOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SaveOutlined);","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport DatePicker from '../date-picker';\nimport devWarning from '../_util/devWarning';\nvar InternalTimePicker = DatePicker.TimePicker,\n    InternalRangePicker = DatePicker.RangePicker;\nvar RangePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(InternalRangePicker, _extends({}, props, {\n    dropdownClassName: props.popupClassName,\n    picker: \"time\",\n    mode: undefined,\n    ref: ref\n  }));\n});\nvar TimePicker = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var addon = _a.addon,\n      renderExtraFooter = _a.renderExtraFooter,\n      popupClassName = _a.popupClassName,\n      restProps = __rest(_a, [\"addon\", \"renderExtraFooter\", \"popupClassName\"]);\n\n  var internalRenderExtraFooter = React.useMemo(function () {\n    if (renderExtraFooter) {\n      return renderExtraFooter;\n    }\n\n    if (addon) {\n      devWarning(false, 'TimePicker', '`addon` is deprecated. Please use `renderExtraFooter` instead.');\n      return addon;\n    }\n\n    return undefined;\n  }, [addon, renderExtraFooter]);\n  return /*#__PURE__*/React.createElement(InternalTimePicker, _extends({}, restProps, {\n    dropdownClassName: popupClassName,\n    mode: undefined,\n    ref: ref,\n    renderExtraFooter: internalRenderExtraFooter\n  }));\n});\nTimePicker.displayName = 'TimePicker';\nTimePicker.RangePicker = RangePicker;\nexport default TimePicker;","export const ON_DISPLAY_SYS_PUSH = \"CUSTOM_EVENT\"","import React, {useState, useEffect} from 'react';\nimport {Button, Card, Col, Form, Input, message, Row, Select, Space, TimePicker} from 'antd'\nimport AirlinesSelectForm from \"../../../../../components/forms/airlines.select.form\";\nimport CitySelectForm from \"../../../../../components/forms/city-select.form\";\nimport TypeStatusSelectForm from \"../../../../../components/forms/type-status.select.form\";\nimport moment from \"moment\";\nimport Utils, {findKey} from \"../../../../../../../utils\";\nimport Flex from \"../../../../../../../components/shared-components/Flex\";\n/**\n *\n * @param {object} props\n * @param {'CREATE' | 'UPDATE'} props.mode\n * @param {object | Array | []} props.initial\n * @returns {JSX.Element}\n */\nfunction GateForm(props) {\n    let { mode,initial,form } = props\n    const [ identifier,setIdentifier] = useState('')\n    \n    useEffect(()=> {\n        if(mode === 'UPDATE'){\n            \n            let field = {}\n            if(typeof(initial) === 'object' && initial && Object.keys(initial).length > 0){\n                Object.keys(initial).forEach((key)=> {\n                    if(typeof(initial[key]) === \"object\" && initial[key] && Object.keys(initial[key]).length > 0){\n                        Object.keys(initial[key]).forEach((k)=> {\n                            if(k === 'start_time' || k === 'end_time'){\n                                Reflect.set(initial[key],k,moment(initial[key][k],'HH:mm'))\n                            }\n                        })\n                    }\n                    Reflect.set(field,key,initial[key])\n                })\n            }\n            form.setFieldsValue({\n                identifier: field?.identifier ?? null,\n                data: {\n                    ...field?.data\n                }\n            });\n            \n        }\n    },[mode,initial,form])\n    \n    function onChangeIdentifier(val){\n        setIdentifier(val.target.value)\n        form.setFieldsValue({\n            identifier: val.target.value\n        })\n    }\n    \n    function onGenerate(){\n        let val = ['GT',Utils.makeId(10)].join('-')\n        setIdentifier(['GT',Utils.makeId(10)].join('-'))\n        form.setFieldsValue({\n            identifier: val\n        })\n    }\n    \n    return (\n      <React.Fragment>\n          <Form\n            form={form}\n            layout={'vertical'}\n            initialValue={{\n                ...initial\n            }}\n          >\n              <Row gutter={24} justify={'center'}>\n                  <Col xs={24} lg={mode === 'UPDATE' ? 24: 16}>\n                      {\n                          mode === 'UPDATE' ?\n                            <Row gutter={24}>\n                                <Col lg={12} xs={24}>\n                                    <Form.Item name={['data', 'flight_no']} label={'Flight Number'} hasFeedback\n                                               rules={[{required: true, message: \"Can't be empty\"}]}>\n                                        <Input autoComplete={'off'} placeholder={'Input your identifir'}/>\n                                    </Form.Item>\n                                </Col>\n                                <Col lg={12} xs={24}>\n                                    <Form.Item name={['data', 'name']} label={'Display Name'} hasFeedback\n                                               rules={[{required: true, message: \"Can't be empty\"}]}>\n                                        <Input autoComplete={'off'} placeholder={'Input your identifir'}/>\n                                    </Form.Item>\n                                </Col>\n                                \n                                <Col lg={12} xs={24}>\n                                    <Form.Item name={['data', 'start_time']} label={'Start Time'} hasFeedback\n                                               rules={[{required: true, message: \"Can't be empty\"}]}>\n                                        <TimePicker\n                                          style={{width: \"100%\"}}\n                                          format={'HH:mm'}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col lg={12} xs={24}>\n                                    <Form.Item name={['data', 'end_time']} label={'End Time'} hasFeedback\n                                               rules={[{required: true, message: \"Can't be empty\"}]}>\n                                        <TimePicker\n                                          type={'time'}\n                                          style={{width: \"100%\"}}\n                                          format={'HH:mm'}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col lg={8} xs={24}>\n                                    <Form.Item name={['data','airline','id']} hidden>\n                                        <Input/>\n                                    </Form.Item>\n                                    <AirlinesSelectForm\n                                      name={['data', 'airline','name']}\n                                      label={'Airlines'}\n                                      select={{\n                                          onChange: function(value,args) {\n                                              console.log({value,args})\n                                              form.setFieldsValue({\n                                                  data: {\n                                                      airline:{\n                                                          name: args?.item?.data?.name ?? null,\n                                                          id:value\n                                                      }\n                                                  }\n                                              })\n                                          }\n                                      }}\n                                      rules={[{required: true, message: \"can't be empty!\"}]}\n                                      keyValue={['id']}\n                                      keyDisplay={['data','name']}\n                                    >\n                                        {({item,index})=> {\n                                            return (\n                                              <Select.Option value={item?.id} item={item} key={item?.id}>{findKey(item,['data','name']) ?? \"undefined\"}</Select.Option>\n                                            )\n                                        }}\n                                    </AirlinesSelectForm>\n                                </Col>\n                                <Col lg={8} xs={24}>\n                                    <Form.Item name={['data','city','id']} hidden>\n                                        <Input/>\n                                    </Form.Item>\n                                    <CitySelectForm\n                                      name={['data', 'city','name']}\n                                      label={'City'}\n                                      select={{\n                                          onChange: function(value,args) {\n                                              console.log({value,args})\n                                              form.setFieldsValue({\n                                                  data: {\n                                                      city:{\n                                                          name: args?.item?.data?.name ?? null,\n                                                          id:value\n                                                      }\n                                                  }\n                                              })\n                                          }\n                                      }}\n                                      rules={[{required: true, message: \"can't be empty!\"}]}\n                                      keyValue={'id'}\n                                      displayValue={['data','name']}\n                                    >\n                                        {({item,index})=> {\n                                            return (\n                                              <Select.Option value={item?.id} item={item} key={item?.id}>{findKey(item,['data','name']) ?? \"undefined\"}</Select.Option>\n                                            )\n                                        }}\n                                    </CitySelectForm>\n                                </Col>\n                                <Col lg={8} xs={24}>\n                                    <TypeStatusSelectForm\n                                      name={['data', 'status']}\n                                      label={'Status'}\n                                      rules={[{required: true, message: \"can't be empty!\"}]}\n                                      keyValue={['data','name']}\n                                    />\n                                </Col>\n                            \n                            \n                            </Row>\n                            :\n                            <Card>\n                                <Row gutter={24}>\n                                    <Col lg={12} xs={24}>\n                                        <Form.Item name={['data', 'flight_no']} label={'Flight Number'} hasFeedback\n                                                   rules={[{required: true, message: \"Can't be empty\"}]}>\n                                            <Input autoComplete={'off'} placeholder={'Input your identifir'}/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col lg={12} xs={24}>\n                                        <Form.Item name={['data', 'name']} label={'Display Name'} hasFeedback\n                                                   rules={[{required: true, message: \"Can't be empty\"}]}>\n                                            <Input autoComplete={'off'} placeholder={'Input your identifir'}/>\n                                        </Form.Item>\n                                    </Col>\n                                    \n                                    <Col lg={12} xs={24}>\n                                        <Form.Item name={['data', 'start_time']} label={'Start Time'} hasFeedback\n                                                   rules={[{required: true, message: \"Can't be empty\"}]}>\n                                            <TimePicker\n                                              style={{width: \"100%\"}}\n                                              format={'HH:mm'}\n                                            />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col lg={12} xs={24}>\n                                        <Form.Item name={['data', 'end_time']} label={'End Time'} hasFeedback\n                                                   rules={[{required: true, message: \"Can't be empty\"}]}>\n                                            <TimePicker\n                                              type={'time'}\n                                              style={{width: \"100%\"}}\n                                              format={'HH:mm'}\n                                            />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col lg={8} xs={24}>\n                                        <Form.Item name={['data','airline','id']} hidden>\n                                            <Input/>\n                                        </Form.Item>\n                                        <AirlinesSelectForm\n                                          name={['data', 'airline','name']}\n                                          label={'Airlines'}\n                                          select={{\n                                              onChange: function(value,args) {\n                                                  console.log({value,args})\n                                                  form.setFieldsValue({\n                                                      data: {\n                                                          airline:{\n                                                              name: args?.item?.data?.name ?? null,\n                                                              id:value\n                                                          }\n                                                      }\n                                                  })\n                                              }\n                                          }}\n                                          rules={[{required: true, message: \"can't be empty!\"}]}\n                                          keyValue={['id']}\n                                          keyDisplay={['data','name']}\n                                        >\n                                            {({item,index})=> {\n                                                return (\n                                                  <Select.Option value={item?.id} item={item} key={item?.id}>{findKey(item,['data','name']) ?? \"undefined\"}</Select.Option>\n                                                )\n                                            }}\n                                        </AirlinesSelectForm>\n                                    </Col>\n                                    <Col lg={8} xs={24}>\n                                        <Form.Item name={['data','city','id']} hidden>\n                                            <Input/>\n                                        </Form.Item>\n                                        <CitySelectForm\n                                          name={['data', 'city','name']}\n                                          label={'City'}\n                                          select={{\n                                              onChange: function(value,args) {\n                                                  console.log({value,args})\n                                                  form.setFieldsValue({\n                                                      data: {\n                                                          city:{\n                                                              name: args?.item?.data?.name ?? null,\n                                                              id:value\n                                                          }\n                                                      }\n                                                  })\n                                              }\n                                          }}\n                                          rules={[{required: true, message: \"can't be empty!\"}]}\n                                          keyValue={'id'}\n                                          displayValue={['data','name']}\n                                        >\n                                            {({item,index})=> {\n                                                return (\n                                                  <Select.Option value={item?.id} item={item} key={item?.id}>{findKey(item,['data','name']) ?? \"undefined\"}</Select.Option>\n                                                )\n                                            }}\n                                        </CitySelectForm>\n                                    </Col>\n                                    <Col lg={8} xs={24}>\n                                        <TypeStatusSelectForm\n                                          name={['data', 'status']}\n                                          label={'Status'}\n                                          rules={[{required: true, message: \"can't be empty!\"}]}\n                                          keyValue={['data','name']}\n                                        />\n                                    </Col>\n                                \n                                \n                                </Row>\n                            </Card>\n                      }\n                  </Col>\n              </Row>\n          \n          </Form>\n      </React.Fragment>\n    );\n}\n\nexport default GateForm;","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport HeroComponents from \"components/layout-components/CustomrPageHeaderAlt\";\nimport ButtonPermission from \"components/permission-components/button.permission\";\nimport {ArrowLeftOutlined, SaveOutlined} from \"@ant-design/icons\";\nimport ContainerTailwind from \"components/layout-components/ContainerTailwind\";\nimport {Card, Col, DatePicker, Form, Input, message, Row, TimePicker} from \"antd\";\nimport moment from \"moment\";\nimport PreloaderText from \"../../../../../../../components/animated-components/preloader-text\";\nimport ApiService from \"../../../../../../../services/api.service\";\nimport {SocketSend} from \"../../../../../../../redux/actions/websocket.action\";\nimport {ON_DISPLAY_SYS_PUSH} from \"../../../../../../../constants/socket.event\";\nimport AirlinesSelectForm from \"../../../../../components/forms/airlines.select.form\";\nimport CitySelectForm from \"../../../../../components/forms/city-select.form\";\nimport TypeStatusSelectForm from \"../../../../../components/forms/type-status.select.form\";\nimport GateForm from \"../components/gate.form\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction mapStateToProps(state) {\n\treturn {};\n}\n\nfunction Index(props) {\n \n\tconst history = useHistory();\n\tconst [form] = Form.useForm();\n\tconst [loading, setLoading] = useState(false);\n\tconst onFinish = () => {\n\t\tsetLoading(true)\n\t\tmessage.loading({\n\t\t\tkey: \"create-display-system\",\n\t\t\tcontent: <PreloaderText text={'Loading'} dots={3} speed={300}/>,\n\t\t\tduration: 5\n\t\t})\n\t\tform.validateFields()\n\t\t\t.then((value) => {\n\t\t\t\tif (typeof (value?.data) !== 'undefined' && value?.data && typeof (value?.data) === 'object' && Object.keys(value?.data).length > 0) {\n\t\t\t\t\tObject.entries(value?.data).forEach(([key, val]) => {\n\t\t\t\t\t\tif (key === 'start_time' || key === 'end_time') {\n\t\t\t\t\t\t\tif (moment(val).isValid()) {\n\t\t\t\t\t\t\t\tReflect.set(value.data, key, moment(val).format(\"HH:mm\"))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tnew ApiService({\n\t\t\t\t\turl: `/api/v1/master-data/gate`,\n\t\t\t\t\tbody: value,\n\t\t\t\t}).post()\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tif (response?.success) {\n\t\t\t\t\t\t\tmessage.success({\n\t\t\t\t\t\t\t\tkey: \"create-display-system\",\n\t\t\t\t\t\t\t\tcontent: response?.message ?? \"Successfully! save to database\",\n\t\t\t\t\t\t\t\tduration: 5\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmessage.error({\n\t\t\t\t\t\t\t\tkey: \"create-display-system\",\n\t\t\t\t\t\t\t\tcontent: response?.message ?? \"Error: fail to database\",\n\t\t\t\t\t\t\t\tduration: 5\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tmessage.error({\n\t\t\t\t\t\t\tkey: \"create-display-system\",\n\t\t\t\t\t\t\tcontent: err?.message ?? \"Error: fail to database\",\n\t\t\t\t\t\t\tduration: 5\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\tsetLoading(false)\n\t\t\t\t\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tmessage.error({\n\t\t\t\t\tkey: \"create-display-system\",\n\t\t\t\t\tcontent: err?.message ?? \"Some Error Field\",\n\t\t\t\t\tduration: 5\n\t\t\t\t})\n\t\t\t})\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<HeroComponents\n\t\t\t\tloading={false}\n\t\t\t\tname={\"Create\"}\n\t\t\t\tpositionName={['Master Data','Gate']}\n\t\t\t\tthumbnail={'/create.png'}\n\t\t\t\tpositionColor={'cyan'}\n\t\t\t\textra={<div className={'d-flex align-items-center mk-gap-2'}>\n          <ButtonPermission\n            permission={['admin']}\n            theme={{\n              type: \"notification\",\n              property: {\n                message: \"Access Denied\",\n                description: \"Anda tidak dapat menyimpan ke database \"\n              }\n            }}\n            config={{\n              loading:loading,\n              icon: <ArrowLeftOutlined/>,\n              type: \"primary\",\n              danger: false,\n              ghost: true,\n              size: \"small\",\n              onClick: function () {\n                history.replace('/dashboard/master-data/gate')\n              }\n            }}>Back</ButtonPermission>\n\t\t\t\t\t<ButtonPermission\n\t\t\t\t\t\tpermission={['admin']}\n\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\ttype: \"notification\",\n\t\t\t\t\t\t\tproperty: {\n\t\t\t\t\t\t\t\tmessage: \"Access Denied\",\n\t\t\t\t\t\t\t\tdescription: \"Anda tidak dapat menyimpan ke database \"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tconfig={{\n\t\t\t\t\t\t\tloading: loading,\n\t\t\t\t\t\t\ticon: <SaveOutlined/>,\n\t\t\t\t\t\t\ttype: \"primary\",\n\t\t\t\t\t\t\tdanger: false,\n\t\t\t\t\t\t\tghost: false,\n\t\t\t\t\t\t\tsize: \"small\",\n\t\t\t\t\t\t\tonClick: function () {\n\t\t\t\t\t\t\t\tonFinish();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<span>Save</span>\n\t\t\t\t\t</ButtonPermission>\n\t\t\t\t</div>}\n\t\t\t/>\n\t\t\t\n\t\t\t<div style={{marginTop: 90}}>\n\t\t\t\t<ContainerTailwind>\n\t\t\t\t\t<GateForm form={form}/>\n\t\t\t\t</ContainerTailwind>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default connect(\n\tmapStateToProps, {SocketSend}\n)(Index);"],"sourceRoot":""}